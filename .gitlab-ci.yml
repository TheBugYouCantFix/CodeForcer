stages:
  - lint
  - test
  - deploy

pylint:
  stage: lint
  image:
    name: python:3.12
    pull_policy: if-not-present
  variables:
    PYTHONPATH: "${PYTHONPATH}:backend"
  before_script:
    - pip install -r backend/requirements.txt
    - pip install pylint
  script:
    - pylint backend --disable=C0114,C0116,R0903,C0115,C0103,R0902,W1514,W0621,R0801 --max-line-length=120
  except:
    changes:
      - README.md

front_lint:
  stage: lint
  image:
    name: node:20
    pull_policy: if-not-present
  before_script:
    - cd frontend/
    - npm install
  script:
    - npm run lint
  except:
    changes:
      - README.md
  
pytest:
  stage: test
  image:
    name: python:3.12
    pull_policy: if-not-present
  variables:
    PYTHONPATH: "${PYTHONPATH}:backend"
  before_script:
    - pip install -r backend/requirements.txt
    - pip install pytest
  script:
    - pytest backend/tests/
  except:
    changes:
      - README.md

deploy:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  when: manual    
  tags:
    - server-runner
  before_script:
    - docker compose down
  script:
    - docker compose up -d --build
    